import { Injectable } from '@nestjs/common';
import { StepResponseDto } from '../../../../workflows-v2/dtos/step.response.dto';
import { WorkflowResponseDto } from '../../../../workflows-v2/dtos/workflow-response.dto';
import { INormalizedStep, INormalizedWorkflow } from '../types/workflow-sync.types';

@Injectable()
export class WorkflowNormalizer {
  /**
   * We want to normalize the workflow and omit any fields that are autogenerated by the system
   * Or are not relevant for the comparison
   */
  normalizeWorkflow(workflow: WorkflowResponseDto): INormalizedWorkflow {
    const {
      _id,
      slug,
      updatedAt,
      updatedBy,
      lastPublishedAt,
      lastPublishedBy,
      createdAt,
      origin,
      status,
      issues,
      lastTriggeredAt,
      payloadExample,
      steps = [],
      ...normalizedWorkflow
    } = workflow;

    return {
      ...normalizedWorkflow,
      payloadSchema: normalizedWorkflow.payloadSchema ?? null,
      steps: steps.map((step) => this.normalizeStep(step)),
    };
  }

  normalizeStep(step: StepResponseDto): INormalizedStep {
    const { _id, slug, origin, workflowId, workflowDatabaseId, issues, controls, variables, ...normalizedStep } = step;

    return normalizedStep;
  }
}
