FROM node:20-alpine3.19 AS builder
RUN apk add g++ make py3-pip
ENV NX_DAEMON=false

WORKDIR /usr/src/app

RUN apk add --no-cache bash
RUN npm install -g pnpm@10.11.0 --loglevel notice

COPY .npmrc .
COPY package.json .

COPY apps/dashboard ./apps/dashboard
COPY libs ./libs
COPY packages ./packages
COPY enterprise ./enterprise
COPY tsconfig.json .

COPY nx.json .
COPY pnpm-workspace.yaml .
COPY pnpm-lock.yaml .

RUN --mount=type=cache,id=pnpm-store-dashboard,target=/root/.pnpm-store\
  pnpm install --frozen-lockfile --unsafe-perm

RUN CI='' pnpm build:dashboard --skip-nx-cache

FROM node:20-alpine

RUN npm install -g http-server --loglevel notice

USER 1000
WORKDIR /app

COPY --chown=1000:1000 --from=builder /usr/src/app/apps/dashboard/dist /app/dist
COPY --chown=1000:1000 --from=builder /usr/src/app/apps/dashboard/package.json /app/package.json
COPY --chown=1000:1000 --from=builder /usr/src/app/apps/dashboard/docker-entrypoint.sh /app/docker-entrypoint.sh  

RUN chmod +x /app/docker-entrypoint.sh
ENTRYPOINT [ "/app/docker-entrypoint.sh" ]
# Expose the port the app runs on
EXPOSE 4000
CMD [ "http-server", "dist", "-p", "4000", "-d", "false", "--proxy", "http://localhost:4000?" ]