/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PushRenderOutput = {
  /**
   * Subject of the push notification
   */
  subject: string;
  /**
   * Body of the push notification
   */
  body: string;
};

/** @internal */
export const PushRenderOutput$inboundSchema: z.ZodType<
  PushRenderOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  subject: z.string(),
  body: z.string(),
});

/** @internal */
export type PushRenderOutput$Outbound = {
  subject: string;
  body: string;
};

/** @internal */
export const PushRenderOutput$outboundSchema: z.ZodType<
  PushRenderOutput$Outbound,
  z.ZodTypeDef,
  PushRenderOutput
> = z.object({
  subject: z.string(),
  body: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PushRenderOutput$ {
  /** @deprecated use `PushRenderOutput$inboundSchema` instead. */
  export const inboundSchema = PushRenderOutput$inboundSchema;
  /** @deprecated use `PushRenderOutput$outboundSchema` instead. */
  export const outboundSchema = PushRenderOutput$outboundSchema;
  /** @deprecated use `PushRenderOutput$Outbound` instead. */
  export type Outbound = PushRenderOutput$Outbound;
}

export function pushRenderOutputToJSON(
  pushRenderOutput: PushRenderOutput,
): string {
  return JSON.stringify(
    PushRenderOutput$outboundSchema.parse(pushRenderOutput),
  );
}

export function pushRenderOutputFromJSON(
  jsonString: string,
): SafeParseResult<PushRenderOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PushRenderOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PushRenderOutput' from JSON`,
  );
}
