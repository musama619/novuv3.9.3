/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PreviewPayloadDto,
  PreviewPayloadDto$inboundSchema,
  PreviewPayloadDto$Outbound,
  PreviewPayloadDto$outboundSchema,
} from "./previewpayloaddto.js";

export type GeneratePreviewRequestDto = {
  /**
   * Optional control values
   */
  controlValues?: { [k: string]: any } | undefined;
  /**
   * Optional payload for preview generation
   */
  previewPayload?: PreviewPayloadDto | undefined;
};

/** @internal */
export const GeneratePreviewRequestDto$inboundSchema: z.ZodType<
  GeneratePreviewRequestDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  controlValues: z.record(z.any()).optional(),
  previewPayload: PreviewPayloadDto$inboundSchema.optional(),
});

/** @internal */
export type GeneratePreviewRequestDto$Outbound = {
  controlValues?: { [k: string]: any } | undefined;
  previewPayload?: PreviewPayloadDto$Outbound | undefined;
};

/** @internal */
export const GeneratePreviewRequestDto$outboundSchema: z.ZodType<
  GeneratePreviewRequestDto$Outbound,
  z.ZodTypeDef,
  GeneratePreviewRequestDto
> = z.object({
  controlValues: z.record(z.any()).optional(),
  previewPayload: PreviewPayloadDto$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GeneratePreviewRequestDto$ {
  /** @deprecated use `GeneratePreviewRequestDto$inboundSchema` instead. */
  export const inboundSchema = GeneratePreviewRequestDto$inboundSchema;
  /** @deprecated use `GeneratePreviewRequestDto$outboundSchema` instead. */
  export const outboundSchema = GeneratePreviewRequestDto$outboundSchema;
  /** @deprecated use `GeneratePreviewRequestDto$Outbound` instead. */
  export type Outbound = GeneratePreviewRequestDto$Outbound;
}

export function generatePreviewRequestDtoToJSON(
  generatePreviewRequestDto: GeneratePreviewRequestDto,
): string {
  return JSON.stringify(
    GeneratePreviewRequestDto$outboundSchema.parse(generatePreviewRequestDto),
  );
}

export function generatePreviewRequestDtoFromJSON(
  jsonString: string,
): SafeParseResult<GeneratePreviewRequestDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GeneratePreviewRequestDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GeneratePreviewRequestDto' from JSON`,
  );
}
