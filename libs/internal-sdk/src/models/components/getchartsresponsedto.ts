/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Chart sections
 */
export type Data = {};

export type GetChartsResponseDto = {
  /**
   * Chart sections
   */
  data: Data;
};

/** @internal */
export const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown> = z
  .object({});

/** @internal */
export type Data$Outbound = {};

/** @internal */
export const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data> =
  z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Data$ {
  /** @deprecated use `Data$inboundSchema` instead. */
  export const inboundSchema = Data$inboundSchema;
  /** @deprecated use `Data$outboundSchema` instead. */
  export const outboundSchema = Data$outboundSchema;
  /** @deprecated use `Data$Outbound` instead. */
  export type Outbound = Data$Outbound;
}

export function dataToJSON(data: Data): string {
  return JSON.stringify(Data$outboundSchema.parse(data));
}

export function dataFromJSON(
  jsonString: string,
): SafeParseResult<Data, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Data$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Data' from JSON`,
  );
}

/** @internal */
export const GetChartsResponseDto$inboundSchema: z.ZodType<
  GetChartsResponseDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => Data$inboundSchema),
});

/** @internal */
export type GetChartsResponseDto$Outbound = {
  data: Data$Outbound;
};

/** @internal */
export const GetChartsResponseDto$outboundSchema: z.ZodType<
  GetChartsResponseDto$Outbound,
  z.ZodTypeDef,
  GetChartsResponseDto
> = z.object({
  data: z.lazy(() => Data$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetChartsResponseDto$ {
  /** @deprecated use `GetChartsResponseDto$inboundSchema` instead. */
  export const inboundSchema = GetChartsResponseDto$inboundSchema;
  /** @deprecated use `GetChartsResponseDto$outboundSchema` instead. */
  export const outboundSchema = GetChartsResponseDto$outboundSchema;
  /** @deprecated use `GetChartsResponseDto$Outbound` instead. */
  export type Outbound = GetChartsResponseDto$Outbound;
}

export function getChartsResponseDtoToJSON(
  getChartsResponseDto: GetChartsResponseDto,
): string {
  return JSON.stringify(
    GetChartsResponseDto$outboundSchema.parse(getChartsResponseDto),
  );
}

export function getChartsResponseDtoFromJSON(
  jsonString: string,
): SafeParseResult<GetChartsResponseDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetChartsResponseDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetChartsResponseDto' from JSON`,
  );
}
