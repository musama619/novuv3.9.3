/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { activityRequestsList } from "../funcs/activityRequestsList.js";
import { activityRequestsRetrieve } from "../funcs/activityRequestsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Requests extends ClientSDK {
  /**
   * List activity requests
   *
   * @remarks
   * Retrieve a list of activity requests with optional filtering and pagination.
   */
  async list(
    request: operations.ActivityControllerGetLogsRequest,
    options?: RequestOptions,
  ): Promise<components.GetRequestsResponseDto> {
    return unwrapAsync(activityRequestsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve activity request
   *
   * @remarks
   * Retrieve detailed traces and information for a specific activity request by ID.
   */
  async retrieve(
    requestId: string,
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<components.GetRequestResponseDto> {
    return unwrapAsync(activityRequestsRetrieve(
      this,
      requestId,
      idempotencyKey,
      options,
    ));
  }
}
